#
#  `Tristan-MP v2` input file
#
#

#
# This example contains the most up-to-date full set of input parameters ...
# ... that `Tristan-MP v2` can read.
#

#
# [*]   -> required parameter
# [...] -> default value if not found in input
#

<node_configuration>

  sizex         = 2              # number of cpus in x direction [*] if 1d+
  sizey         = 2              # number of cpus in y direction [*] if 2d+
  sizez         = 1              # number of cpus in z direction [*] if 3d

<time>

  last           = 1000          # last timestep [1000]

<grid>

  mx0           = 64             # number of actual grid points in the x direction [*] if 1d+
  my0           = 64             # number of actual grid points in the y direction [*] if 2d+
  mz0           = 1              # number of actual grid points in the z direction [*] if 3d

  # 1 = periodic, 0 = outflow, 2 = radial outflow ...
  # ... if either is "2" all will be assigned to "2"
  boundary_x    = 1              # boundary in x [1]
  boundary_y    = 1              # boundary in y [1]
  boundary_z    = 1              # boundary in z [1]
  abs_thick     = 20             # thickness of the absorption layer [10]
  # `abs_thick` used only when boundary is `1` or `2`

  resize_tiles  = 0              # reallocate particle tiles if necessary [0]
  min_tile_nprt = 1000           # min # of allocated particles per tile [100]
  max_buff      = 100            # max overdensity to be passed between meshblocks [100]

  tileX         = 5              # tile dimension in x [* if 1d+]
  tileY         = 5              # tile dimension in y [* if 2d+]
  tileZ         = 1              # tile dimension in z [* if 3d]

<algorithm>

  c             = 0.45           # speed of light [0.45]
  corr          = 1.025          # correction to the speed of light [1.025]
  nfilter       = 8              # number of current filter passes [16]
  fieldsolver   = 1              # enable/disable the fieldsolver [1]
  currdeposit   = 1              # enable/disable the current deposition [1]

<restart>

  do_restart    = 0              # perform simulation restart [0]
  cpu_group     = 50             # simultaneously written restart files [50]
  enable        = 0              # enable/disable restart [0]
  start         = 1              # first restart step [0]
  interval      = 1000           # step interval between restarts [10000]
  rewrite       = 1              # 1 = rewrite each restart; 0 = separate restart each time [0]

<output>

  # following two groups are for the `.tot.` main output
  enable        = 1              # enable/disable output [1]
  flds_enable   = 0              # field output [1]
  prtl_enable   = 0              # prtl output [1]
  spec_enable   = 1              # spectra output [1]
  params_enable = 1              # parameters output [1]
  diag_enable   = 0              # diagnostic output (domain etc) [0]

  start         = 0              # first output step [0]
  interval      = 10             # interval between output steps [10]
  stride        = 100            # particle stride [10]
  istep         = 4              # field downsampling [1]
  smooth_window = 2              # window for gaussian smoothing of the densities [2]
  flds_at_prtl  = 1              # save fields at particle position [0]
  write_xdmf    = 1              # enable XDMF file writing (to open hdf5 in VisIt) [1]
  write_nablas  = 1              # write divE & curlB [0]
  write_momenta = 1              # write average particle momenta as fields [0]
	write_npart 	= 1					 		 # write average particle weights per cell [0]

  # history output
  hst_enable    = 0              # enable/disable history output [0]
  hst_interval  = 1              # interval between history output steps [1]
  hst_readable  = 1              # enable the human readable format (less accurate) [0]

  # spectra output
  # bins are `g - 1` for massive and `e` for massless

  spec_dynamic_bins = 1          # dynamically vary max energy bin [0]

  # if dynamic bins are enabled -- these are initial min/max values
  spec_min      = 1e-3           # min energy of spectra [1e-2]
  spec_max      = 1e1            # max energy of spectra [1e2]
  spec_num      = 100            # number of energy bins [100]
  spec_log_bins = 1              # (1 = log | 0 = linear) bins in energy [1]

  spec_nx       = 10             # number of spatial spectra blocks in x [1]
  spec_ny       = 10             # number of spatial spectra blocks in y [1]
  spec_nz       = 10             # number of spatial spectra blocks in z [1]

<slice_output>
  # this only works in 3d

  enable        = 1              # enable/disable slice output [0]
  start         = 0              # first slice output step [0]
  interval      = 10             # interval between slice output steps [10]

  # save 5 different slices of a 3d run ...
  # ... these fields are not required and there can be as many as you please
  sliceX_1      = 60             # x = 60 plane
  sliceX_2      = 360            # x = 360 plane
  sliceX_3      = 560            # x = 560 plane

  sliceY_1      = 5              # y = 5 plane
  sliceY_2      = 140            # y = 140 plane

  sliceZ_1      = 100            # z = 100 plane

<static_load_balancing>

  # (if `slb` flag is enabled)
  in_x         = 0               # enable along x [0]
  sx_min       = 10              # min # of cells per meshblock [10]

  in_y         = 0               # enable along y [0]
  sy_min       = 10              # min # of cells per meshblock [10]

  in_z         = 0               # enable along z [0]
  sz_min       = 10              # min # of cells per meshblock [10]

<plasma>
  # these three parameters determine the...
  # ... unit normalization of the code
  ppc0          = 10             # [*]
  sigma         = 4              # [*]
  c_omp         = 10             # [*]

<particles>

  nspec         = 3             # number of species [2]

  maxptl1       = 1e6           # max # per core [*]
  m1            = 1             # mass (in units of m_e) [*]
  ch1           = -1            # charge (in units of q_e) [*]
  deposit1      = 1             # does species deposit current? [1] if (ch != 0) else [0]
  move1         = 1             # does species move? [1]
  output1       = 0             # are species written to `prtl` [1]

  maxptl2       = 1e6
  m2            = 1
  ch2           = 1
  deposit2      = 1
  move2         = 1

  maxptl3       = 1e6
  m3            = 0
  ch3           = 0
  dwn3          = 1             # enable/disable particle downsampling [0]

<downsampling>

  # particle downsampling (merging) parameters (`dwn` flag)
  interval      = 10            # interval between downsampling steps [1]
  start         = 1             # starting timestep [0]
  max_weight    = 100           # maximum weight of merging particles [1e2]

  cartesian_bins = 0            # cartesian or spherical momentum binning [0]
  energy_min    = 1e-1          # min energy of merged particle [1e-2]
  energy_max    = 1e1           # max energy of merged particle [1e2]
  int_weights   = 1             # enforce integer weights when merging [0]

  # if spherical binning
  angular_bins  = 5             # number of angular bins (theta/phi) [5]
  energy_bins   = 5             # number of log energy bins [5]
  log_e_bins    = 1             # log or linear energy bins [1]

  # if cartesian binning
  dynamic_bins  = 1             # take min/max energy locally in each tile...
                                # (energ_max/min still set the global maxima) [0]
  mom_bins      = 5             # number of momentum bins in XYZ phase space [5]
  mom_spread    = 0.1           # max momentum spread allowed for dynamic bins [0.1]

<problem>
