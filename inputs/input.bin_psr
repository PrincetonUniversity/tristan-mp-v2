#
#  `Tristan-MP v2` input file
#
#

#
# This example contains the most up-to-date full set of input parameters ...
# ... that `Tristan-MP v2` can read.
#

#
# [*]   -> required parameter
# [...] -> default value if not found in input
#

<node_configuration>

  sizex         = 7              # number of cpus in x direction [*] if 1d+
  sizey         = 8              # number of cpus in y direction [*] if 2d+
  sizez         = 8              # number of cpus in z direction [*] if 3d

<time>

  last          = 12800          # last timestep [1000]

<grid>

  mx0           = 560            # number of actual grid points in the x direction [*] if 1d+
  my0           = 560            # number of actual grid points in the y direction [*] if 2d+
  mz0           = 560            # number of actual grid points in the z direction [*] if 3d

  # 1 = periodic, 0 = outflow, 2 = radial outflow ...
  # ... if either is "2" all will be assigned to "2"
  boundary_x    = 2              # boundary in x [1]
  boundary_y    = 2              # boundary in y [1]
  boundary_z    = 2              # boundary in z [1]
  abs_thick     = 20             # thickness of the absorption layer [10]
  # `abs_thick` used only when boundary is `1` or `2`

  resize_tiles  = 1              # reallocate particle tiles if necessary [0]
  min_tile_nprt = 10000000       # min # of allocated particles per tile [100]

  tileX         = 10             # tile dimension in x [* if 1d+]
  tileY         = 10             # tile dimension in y [* if 2d+]
  tileZ         = 10             # tile dimension in z [* if 3d]

<algorithm>

  c             = 0.45           # speed of light [0.45]
  corr          = 1.025          # correction to the speed of light [1.025]
  nfilter       = 4              # number of current filter passes [16]

  # following 4 values are required if `gcaiter` flag is enabled
  gca_rhoL      = 1.0            # critical larmor radius at which GCA kicks in [*]
  gca_EoverB    = 0.9            # critical E/B at which GCA kicks in [*]
  gca_vperpMax  = 0.025          # particles with larger v_perp will be treated as Boris [*]
  gca_enforce_mu0 = 1            # enforce mu = 0 for GCA particles [*]

<restart>

  do_restart    = 0              # perform simulation restart [0]
  cpu_group     = 50             # simultaneously written restart files [50]
  enable        = 0              # enable/disable restart [0]
  start         = 1              # first restart step [0]
  interval      = 1000           # step interval between restarts [10000]
  rewrite       = 1              # 1 = rewrite each restart; 0 = separate restart each time [0]

<output>

  # following two groups are for the `.tot.` main output
  enable        = 1              # enable/disable output [1]
  flds_enable   = 1              # field output [1]
  prtl_enable   = 1              # prtl output [1]
  spec_enable   = 1              # spectra output [1]
  params_enable = 1              # parameters output [1]
  diag_enable   = 0              # diagnostic output (domain etc) [0]

  start         = 0              # first output step [0]
  interval      = 800            # interval between output steps [10]
  stride        = 100            # particle stride [10]
  istep         = 1              # field downsampling [1]
  smooth_window = 2              # window for gaussian smoothing of the densities [2]
  flds_at_prtl  = 0              # save fields at particle position [0]
  write_xdmf    = 1              # enable XDMF file writing (to open hdf5 in VisIt) [1]
  write_nablas  = 0              # write divE & curlB [0]
  write_T0i = 0              # write average particle momenta as fields [0]

  # history output
  hst_enable    = 0              # enable/disable history output [0]
  hst_interval  = 1              # interval between history output steps [1]

  # spectra output
  # bins are `g - 1` for massive and `e` for massless

  # if dynamic bins are enabled -- these are initial min/max values
  spec_min      = 1e-3           # min energy of spectra [1e-2]
  spec_max      = 1e4            # max energy of spectra [1e2]
  spec_num      = 300            # number of energy bins [100]

  spec_nx       = 20             # number of spatial spectra blocks in x [1]
  spec_ny       = 20             # number of spatial spectra blocks in y [1]
  spec_nz       = 20             # number of spatial spectra blocks in z [1]

  # radiation spectra output (if `rad` flag enabled)
  rad_spec_min  = 1e-3           # [spec_min]
  rad_spec_max  = 1e4            # [spec_max]
  rad_spec_num  = 300            # [spec_num]

<slice_output>
  # this only works in 3d

  enable        = 1              # enable/disable slice output [0]
  start         = 0              # first slice output step [0]
  interval      = 100            # interval between slice output steps [10]

  # ... these fields are not required and there can be as many as you please
  sliceX_1      = 280
  sliceY_1      = 280
  sliceZ_1      = 280

<plasma>
  # these three parameters determine the...
  # ... unit normalization of the code
  ppc0          = 10             # [*]
  sigma         = 1e7            # [*]
  c_omp         = 4              # [*]

<particles>

  nspec         = 2             # number of species [2]

  maxptl1       = 1e8           # max # per core [*]
  m1            = 1             # mass (in units of m_e) [*]
  ch1           = -1            # charge (in units of q_e) [*]
  cool1         = 1
  gca1          = 1

  maxptl2       = 1e6
  m2            = 1
  ch2           = 1
  cool2         = 1
  gca2          = 1

<radiation>

  # `rad` flag has to be enabled
  interval      = 40            # interval between radiation timesteps...
                                # ... weights of radiated photons are normalized by this number
                                # [1]

  emit_gamma_syn = 50           # determines synchrotron photon peak energy [10]
  gamma_syn     = 20            # determines the synchrotron cooling rate [10]
  beta_rec      = 0.1           # fiducial number that goes into the definition of `gamma_syn` and `gamma_ic` [0.1]

<problem>

  fld_geometry  = 2
  psr_radius1   = 40
  psr_angle1    = 0
  psr_angle2    = -180
  psr_period1   = 1600

  rmin_dr       = 1.0
  inj_method    = 2
  inj_shell     = 1.0
  e_dr          = 0.0

  inj_dr        = 1.0
  inj_mult      = 1.0

  nGJ_limiter   = 0.0
  sigGJ_limiter = 0.1
  jdotb_limiter = 0.0

  prtl_kick     = 2.0
  gca_radius    = 10
