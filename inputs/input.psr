#
#  Tristan-mp input file
#

<node_configuration>

  sizex         = 7              # number of cpus in x direction
  sizey         = 8              # number of cpus in y direction
  sizez         = 8              # number of cpus in z direction

<time>

  last          = 6400           # last timestep

<grid>

  mx0           = 560            # number of actual grid points in the x direction
  my0           = 560            # number of actual grid points in the y direction
  mz0           = 560            # ... (ignored for 2D simulations)

  boundary_x    = 2              # boundary in x: 1 = periodic, 0 = outflow, 2 = radial outflow
  boundary_y    = 2              # boundary in y: 1 = periodic, 0 = outflow, 2 = radial outflow
  boundary_z    = 2              # boundary in z: 1 = periodic, 0 = outflow, 2 = radial outflow
                                 # ... if either is "2" all will be assigned to "2"
  abs_thick     = 20             # thickness of the absorption layer (used only when boundary is 1 or 2)

  resize_tiles  = 0              # reallocate particle tiles if necessary
  min_tile_nprt = 1000           # min # of allocated particles per tile

  tileX         = 16             # tile dimension in x
  tileY         = 14             # tile dimension in y
  tileZ         = 14             # tile dimension in z

<algorithm>

  nfilter       = 2              # number of current filter passes
  c             = 0.45
  corr          = 1.025

<restart>

  enable        = 0              # enable/disable restart
  start         = 0              # first restart step
  interval      = 200            # step interval between restarts
  rewrite       = 0              # 1 = rewrite each restart; 0 = separate restart each time

<output>

  start         = 0              # first output step
  interval      = 400            # interval between output steps
  stride        = 100            # particle stride
  istep         = 2              # field downsampling
  flds_at_prtl  = 0              # save fields at particle position
  write_xdmf    = 1              # enable XDMF file writing (to open hdf5 in VisIt)

  hst_enable    = 1              # turn history file ON/OFF
  hst_interval  = 100

  spec_min      = 1e-2           # `g - 1` for massive and `e` for massless
  spec_max      = 1e4            # `g - 1` for massive and `e` for massless
  spec_num      = 200            # number of energy bins

<static_load_balancing>

  in_x         = 1
  sx_min       = 16

  in_y         = 1
  sy_min       = 14

  in_z         = 1
  sz_min       = 14

<plasma>

  ppc0          = 10
  sigma         = 1e7
  c_omp         = 4

<particles>

  nspec         = 2

  maxptl1       = 1e8           # max number of particles per core
  m1            = 1
  ch1           = -1
  cool1         = 0

  maxptl2       = 1e8           # max number of particles per core
  m2            = 1
  ch2           = 1
  cool2         = 0

<radiation>

  gamma_syn      = 100.0        # `gamma_syn` parameter (determines the synchrotron cooling rate)
  emit_gamma_syn = 50.0         # `emit_gamma_syn` parameter (determines synchrotron photon peak energy)
  beta_rec       = 0.1           # fiducial number that goes into the definition of `gamma_syn` and `gamma_ic`
  dens_limit     = 0       # density limit on the cooled region

<problem>

  fld_geometry  = 2             # 2 = dipole [default], 1 = monopole
  psr_radius    = 40
  psr_angle     = 0
  psr_period    = 1600
	psr_bstar     = 1.0
  rmin_dr       = 1.0           # remove particles falling below `radius - rmin_dr`

  inj_method    = 2             # 1 = screen E.B; 2 = inject nGJ
  inj_shell     = 2.0           # injection shell width

  e_dr          = 0.0           # probe all quantities `dr` cells above the injection point
  inj_dr        = 1.0           # inject slightly above the star from `R* + inj_dr` to `R* + inj_dr + inj_shell`
  inj_mult      = 1.0           # injected plasma weight/density multiplier

  nGJ_limiter   = 0             # no injection if n > nGJ * limiter [0 = disable]
  sigGJ_limiter = 0.1           # no injection if sigma < sigmaGJ * limiter [0 = disable]
  jdotb_limiter = 0.9           # no injection if j_|| < nGJ * qe * c * limiter [0 = disable]
                                # ... except for the first t < 0.1 * period

  prtl_kick     = 2.0           # radially kick with a 4-velocity of ...
  gca_radius    = 10            # enforce GCA below this distance above the stellar surface

  fakepp_density  = 1
  fakepp_timestep = 1600
	fakepp_height   = 10          # scale height for fake pp [50]
	fakepp_ppc      = 0.1					# characteristic ppc for fake injection [1]
	fakepp_rmin     = 2.0         # min radius (in LC) for fake pp [1]
