#
#  Tristan-mp input file
#

<node_configuration>

  sizex         = 2              # number of cpus in x direction
  sizey         = 2              # number of cpus in y direction
  sizez         = 1              # number of cpus in z direction

<time>

  last           = 1000          # last timestep

<grid>

  mx0           = 64             # number of actual grid points in the x direction
  my0           = 64             # number of actual grid points in the y direction
  mz0           = 1              # ... (ignored for 2D simulations)

  boundary_x    = 1              # boundary in x: 1 = periodic, 0 = outflow
  boundary_y    = 1              # boundary in y: 1 = periodic, 0 = outflow
  boundary_z    = 1              # boundary in z: 1 = periodic, 0 = outflow

  resize_tiles  = 0              # reallocate particle tiles if necessary
  min_tile_nprt = 1000           # min # of allocated particles per tile

  tileX         = 5              # tile dimension in x
  tileY         = 5              # tile dimension in y
  tileZ         = 1              # tile dimension in z

<algorithm>

  nfilter       = 8              # number of current filter passes

<restart>

<output>

  start         = 0              # first output step
  interval      = 10             # interval between output steps
  stride        = 100            # particle stride
  istep         = 4              # field downsampling
  flds_at_prtl  = 1              # save fields at particle position

  history       = 0              # 0 = .false.; 1 = .true.
  hst_interval  = 1

  spec_min      = 1e-3           # `g - 1` for massive and `e` for massless
  spec_max      = 1e1            # `g - 1` for massive and `e` for massless
  spec_num      = 100            # number of energy bins

<adaptive_load_balancing>

  in_x         = 0               # enable/disable dynamic load balancing in x
  sx_min       = 10              # MIN number of cells per domain
  interval_x   = 10              # interval between load balancing procedures
  start_x      = 0               # first balancing step

  in_y         = 0
  sy_min       = 10
  interval_y   = 1000
  start_y      = 0

  in_z         = 0
  sz_min       = 10
  interval_z   = 1000
  start_z      = 0

<static_load_balancing>

  in_x         = 0
  sx_min       = 10

  in_y         = 0
  sy_min       = 10

  in_z         = 0
  sz_min       = 10

<plasma>

  ppc0          = 10
  sigma         = 4
  c_omp         = 10

<particles>

  nspec         = 3

  maxptl1       = 1e6           # max number of particles per core
  m1            = 1
  ch1           = -1
  cool1         = 1             # turn ON/OFF cooling for this species

  maxptl2       = 1e6           # max number of particles per core
  m2            = 1
  ch2           = 1
  cool2         = 0             # turn ON/OFF cooling for this species

  maxptl3       = 1e6           # max number of particles per core
  m3            = 0
  ch3           = 0
  bw3           = 1             # turn ON/OFF BW process on these particles

<radiation>

  emit_gamma_syn = 10           # `emit_gamma_syn` parameter (determines synchrotron photon peak energy)
  gamma_syn     = 5             # `gamma_syn` parameter (determines the synchrotron cooling rate)
  gamma_ic      = 5             # `gamma_ic` parameter (determines the IC cooling rate)
  beta_rec      = 0.1           # fiducial number that goes into the definition of `gamma_syn` and `gamma_ic`
  photon_sp     = 3             # emit photons to species #...
  dens_limit    = 100           # density limit on the cooled region

<bw_pp>

  tau_BW        = 0.0001        # fiducial Breit-Wheeler cross section
  interval      = 10            # perform BW once every `interval` timestep
  algorithm     = 1             # 1 = binary collisions, 2 = MC pairing, 3 = hybrid
  electron_sp   = 1             # save produced electrons to species #...
  positron_sp   = 1             # save produced positrons to species #...

<problem>
